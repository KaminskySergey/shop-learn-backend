// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id       Int       @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")
  email String  @unique
  password String
  name  String
  avatarPath String? @default("")
  phone String @default("")
  isAdmin Boolean @default(false) @map("is_admin")
  orders Order[]
  reviews Review[]
  favorites Product[]
}

model Product {
  id       Int       @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")

  name String @unique
  slug String @unique
  description String 
  price String @unique
  images String[]

  orderItems OrderItem[]
  reviews Review[]

  category Category? @relation(fields: [categoryId], references: [id])
  categoryId Int? @map("categoryId")

  user User? @relation(fields: [userId], references: [id])
  userId Int? @map("userId")

}

model Category {
   id       Int       @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")
  name String @unique
  slug String @unique

  products Product[]
}

model Review {
  id       Int       @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")

  rating Int
  text String

  user User @relation(fields: [userId], references: [id])
  userId Int @map("user_id")

  product Product @relation(fields: [productId], references: [id])
  productId Int @map("productId")
}

model Order {
   id       Int       @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")

  status EnumOrderStatus @default(PENDING)
  items OrderItem[]

  user User @relation(fields: [userId], references: [id])
  userId Int @map("user_id")

}

model OrderItem {
  id       Int       @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updateAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price Int

  order  Order? @relation(fields: [orderId], references: [id])
  orderId Int? @map("order_id")

  product Product @relation(fields: [productId], references: [id])
  productId Int @map("product_id")

  @@map("Order_item")
}

enum EnumOrderStatus {
  PENDING
  PAYED
  SHIPPED
  DELIVERED
}